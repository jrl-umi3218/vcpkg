name: Build jrl-umi3218 ports

on:
  push:
    branches:
      - '**'

jobs:
  build-windows:
    env:
        VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    strategy:
      matrix:
        os: [windows-latest, ubuntu-16.04, ubuntu-18.04, ubuntu-20.04, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Bootstrap vcpkg (Windows)
      if: startsWith(runner.os, 'Windows')
      run: |
        .\bootstrap-vcpkg.bat
        echo "::set-env name=VCPKG_DEFAULT_TRIPLET::x64-windows"
    - name: "Bootstrap vcpkg (Linux, macOS)"
      if: "!startsWith(runner.os, 'Windows')"
      run: |
        ./bootstrap-vcpkg.sh
    - name: Setup NuGet Credentials
      shell: bash
      run: >
        ${JRL_MONO} `./vcpkg fetch nuget | tail -n 1` sources add -source "https://nuget.pkg.github.com/jrl-umi3218/index.json" -storepasswordincleartext -name "GitHub" -username "jrl-umi3218" -password "${{ secrets.GITHUB_TOKEN }}"
    - name: Install SpaceVecAlg
      shell: bash
      run: |
        echo "::set-env name=JRL_PORT::spacevecalg"
        ./vcpkg install spacevecalg
    - name: Install RBDyn
      shell: bash
      run: |
        echo "::set-env name=JRL_PORT::rbdyn"
        ./vcpkg install rbdyn
    - name: Install eigen-qld
      shell: bash
      run: |
        echo "::set-env name=JRL_PORT::eigen-qld"
        ./vcpkg install eigen-qld
    - name: Show logs
      if: failure()
      shell: bash
      run: |
        for f in `ls buildtrees/${JRL_PORT}/*.log`
        do
          echo "=========="
          echo "$f"
          echo "=========="
          cat $f
        done
