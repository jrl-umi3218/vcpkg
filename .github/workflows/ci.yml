name: Build jrl-umi3218 ports

on:
  push:
    branches:
      - '**'

jobs:
  build-packages:
    env:
        VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-18.04, ubuntu-20.04, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Remove default installation
      shell: bash
      run: |
        rm -rf "$VCPKG_INSTALLATION_ROOT" || sudo rm -rf "$VCPKG_INSTALLATION_ROOT"
    - name: Bootstrap vcpkg (Windows)
      if: startsWith(runner.os, 'Windows')
      run: |
        .\bootstrap-vcpkg.bat
        echo "VCPKG_DEFAULT_TRIPLET=x64-windows" >> $GITHUB_ENV
    - name: Bootstrap vcpkg (Linux)
      if: startsWith(runner.os, 'Linux')
      run: |
        export CXX=g++ # Enforce default g++ selection
        sudo apt-get install -y python3-setuptools
        ./bootstrap-vcpkg.sh
        echo "JRL_MONO=mono" >> $GITHUB_ENV
    - name: Bootstrap vcpkg (macOS)
      if: startsWith(runner.os, 'macOS')
      run: |
        brew cask install gfortran
        ./bootstrap-vcpkg.sh -allowAppleClang
        echo "JRL_MONO=mono" >> $GITHUB_ENV
    - name: Setup NuGet Credentials
      shell: bash
      run: >
        ${JRL_MONO} `./vcpkg fetch nuget | tail -n 1` sources add -source "https://nuget.pkg.github.com/jrl-umi3218/index.json" -storepasswordincleartext -name "GitHub" -username "jrl-umi3218" -password "${{ secrets.GITHUB_TOKEN }}"
#    - name: Install python-eigen
#      shell: bash
#      run: |
#        echo "JRL_PORT=python-eigen" >> $GITHUB_ENV
#        ./vcpkg install --debug python-eigen
#        set -x
#        ls installed/x64-linux/lib || true
#        ls installed/x64-linux/lib/python* || true
#        ls installed/x64-linux/lib/python*/site-packages || true
#        cat installed/vcpkg/info/python-eigen*.list
#        cat buildtrees/python-eigen/config-x64-linux-rel-out.log || true
#        cat buildtrees/python-eigen/config-x64-linux-rel-err.log || true
#        cat buildtrees/python-eigen/install-x64-linux-rel-out.log || true
#        cat buildtrees/python-eigen/install-x64-linux-rel-err.log || true
#    - name: Install SpaceVecAlg
#      shell: bash
#      run: |
#        echo "JRL_PORT=spacevecalg" >> $GITHUB_ENV
#        ./vcpkg install --debug spacevecalg
#        echo "JRL_PORT=python-spacevecalg" >> $GITHUB_ENV
#        ./vcpkg install --debug python-spacevecalg
#    - name: Install RBDyn
#      shell: bash
#      run: |
#        echo "JRL_PORT=rbdyn" >> $GITHUB_ENV
#        ./vcpkg install --debug rbdyn
#        echo "JRL_PORT=python-rbdyn" >> $GITHUB_ENV
#        ./vcpkg install --debug python-rbdyn
#    - name: Install eigen-qld
#      shell: bash
#      run: |
#        echo "JRL_PORT=eigen-qld" >> $GITHUB_ENV
#        ./vcpkg install --debug eigen-qld
#        echo "JRL_PORT=python-eigen-qld" >> $GITHUB_ENV
#        ./vcpkg install --debug python-eigen-qld
#    - name: Install sch-core
#      shell: bash
#      run: |
#        echo "JRL_PORT=sch-core" >> $GITHUB_ENV
#        ./vcpkg install --debug sch-core
#        echo "JRL_PORT=python-sch-core" >> $GITHUB_ENV
#        ./vcpkg install --debug python-sch-core
#    - name: Install tasks
#      shell: bash
#      run: |
#        echo "JRL_PORT=tasks" >> $GITHUB_ENV
#        ./vcpkg install --debug tasks
#        echo "JRL_PORT=python-tasks" >> $GITHUB_ENV
#        ./vcpkg install --debug python-tasks
#    - name: Install hpp-spline
#      shell: bash
#      run: |
#        echo "JRL_PORT=hpp-spline" >> $GITHUB_ENV
#        ./vcpkg install --debug hpp-spline
#    - name: Install eigen-quadprog
#      shell: bash
#      run: |
#        echo "JRL_PORT=eigen-quadprog" >> $GITHUB_ENV
#        ./vcpkg install --debug eigen-quadprog
#    - name: Install mc-rtc-data
#      shell: bash
#      run: |
#        echo "JRL_PORT=mc-rtc-data" >> $GITHUB_ENV
#        ./vcpkg install --debug mc-rtc-data
#    - name: Install mc-rbdyn-urdf
#      shell: bash
#      run: |
#        echo "JRL_PORT=mc-rbdyn-urdf" >> $GITHUB_ENV
#        ./vcpkg install --debug mc-rbdyn-urdf
#    - name: Install boost-test
#      shell: bash
#      run: |
#        echo "JRL_PORT=boost-test" >> $GITHUB_ENV
#        ./vcpkg install --debug boost-test
#    - name: Install libfranka
#      shell: bash
#      run: |
#        echo "JRL_PORT=libfranka" >> $GITHUB_ENV
#        ./vcpkg install --debug libfranka
    - name: Install mc-rtc
      shell: bash
      run: |
        echo "JRL_PORT=mc-rtc" >> $GITHUB_ENV
        ./vcpkg install --debug mc-rtc
    - name: Show logs
      if: failure()
      shell: bash
      run: |
        for f in `ls buildtrees/${JRL_PORT}/*.log`
        do
          echo "=========="
          echo "$f"
          echo "=========="
          cat $f
        done
