name: Build jrl-umi3218 ports

on:
  push:
    branches:
      - '**'

jobs:
  build-packages:
    env:
        VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-18.04, ubuntu-20.04, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Remove default installation
      shell: bash
      run: |
        rm -rf "$VCPKG_INSTALLATION_ROOT" || sudo rm -rf "$VCPKG_INSTALLATION_ROOT"
    - name: Bootstrap vcpkg (Windows)
      if: startsWith(runner.os, 'Windows')
      run: |
        .\bootstrap-vcpkg.bat
        echo "::set-env name=VCPKG_DEFAULT_TRIPLET::x64-windows"
    - name: Bootstrap vcpkg (Linux)
      if: startsWith(runner.os, 'Linux')
      run: |
        export CXX=g++ # Enforce default g++ selection
        ./bootstrap-vcpkg.sh
        echo "::set-env name=JRL_MONO::mono"
    - name: Bootstrap vcpkg (macOS)
      if: startsWith(runner.os, 'macOS')
      run: |
        brew cask install gfortran
        ./bootstrap-vcpkg.sh -allowAppleClang
        echo "::set-env name=JRL_MONO::mono"
    - name: Setup NuGet Credentials
      shell: bash
      run: >
        ${JRL_MONO} `./vcpkg fetch nuget | tail -n 1` sources add -source "https://nuget.pkg.github.com/jrl-umi3218/index.json" -storepasswordincleartext -name "GitHub" -username "jrl-umi3218" -password "${{ secrets.GITHUB_TOKEN }}"
    - name: Install SpaceVecAlg
      shell: bash
      run: |
        ./vcpkg install --debug spacevecalg
    - name: Install RBDyn
      shell: bash
      run: |
        ./vcpkg install --debug rbdyn
    - name: Install eigen-qld
      shell: bash
      run: |
        ./vcpkg install --debug eigen-qld
    - name: Install sch-core
      shell: bash
      run: |
        ./vcpkg install --debug sch-core
    - name: Install tasks
      shell: bash
      run: |
        ./vcpkg install --debug tasks
